<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/util
           http://www.springframework.org/schema/util/spring-util.xsd">
    <!-- 读取项目中特定位置上的属性文件 -->
    <!-- 一旦读取成功，就可以使用${属性名}方式得到属性的值 -->
    <context:property-placeholder location="classpath*:/system/*.properties" />
    <!-- <context:component-scan base-package="org.forten"></context:component-scan> -->

    <!-- 声明了一个C3P0中的数据库连接池类的Bean，这个Bean就是项目的数据源 -->
    <!-- destroy-method指定了当Bean被销毁时要执行的方法 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <!-- 设置此数据源中的各种数据项 -->
        <property name="driverClass" value="${jdbc.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="acquireIncrement" value="${jdbc.acquireIncrement}" />
        <property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}" />
        <property name="acquireRetryDelay" value="${jdbc.acquireRetryDelay}" />
        <property name="autoCommitOnClose" value="${jdbc.autoCommitOnClose}" />
        <property name="breakAfterAcquireFailure" value="${jdbc.autoCommitOnClose}" />
        <!--<property name="checkoutTimeout" value="${jdbc.checkoutTimeout}" />-->
        <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}" />
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
        <property name="minPoolSize" value="${jdbc.minPoolSize}" />
        <property name="numHelperThreads" value="${jdbc.numHelperThreads}" />
    </bean>

	<!-- 声明MyBatis的SqlSessionFactory Bean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
    </bean>

	<!-- 声明映射接口所在的包 -->
    <bean id="msc" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="org.forten.**.mapper" />
    </bean>

	<!-- 声明事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 通知Spring容器，我们使用annotation方式进行事务管理 -->
    <tx:annotation-driven />
</beans>